generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id              Int      @id @default(autoincrement())
  departmentName  String
  Users           Users[]  
  Task            Task[]
  Service         Service[]
}

model Users {
  id             Int        @id @default(autoincrement())
  username       String     @unique
  password       String
  userType       String
  firstName      String
  lastName       String
  contactNumber  String
  emailId        String     @unique
  departmentId   Int        
  Department     Department @relation(fields: [departmentId], references: [id]) 
}

model Category {
  id             Int           @id @default(autoincrement())
  categoryName   String       
  subCategories  SubCategory[] 
  products       Product[]    
}

model SubCategory {
  id            Int      @id @default(autoincrement())
  subCategoryName String
  categoryId     Int
  category       Category @relation(fields: [categoryId], references: [id])
  products Product[] 
}


model Product {
  id                 Int        @id @default(autoincrement())
  productId          String     @unique
  productName        String
  productDescription String
  HSN                String
  categoryId         Int
  subCategoryId      Int
  category           Category   @relation(fields: [categoryId], references: [id]) 
  subCategory        SubCategory @relation(fields: [subCategoryId], references: [id]) 
}


// Define the Service model
model Service {
  id                 Int         @id @default(autoincrement())
  serviceName        String
  serviceDescription String
  SAC                String
  departmentId      Int
  Department     Department @relation(fields: [departmentId], references: [id])
  Task          Task[]
}

// Define the Vendor model
model Vendor {
  id              Int    @id @default(autoincrement())
  vendorName      String
  registerAddress String
  gstNo           String  @unique
  contactName     String
  contactNumber   String
  emailId         String  @unique
}

// Define the Customer model
model Customer {
  id              Int     @id @default(autoincrement())
  customerId      String   @unique
  customerName    String
  registerAddress String
  gstNo           String   @unique
  contactName     String
  contactNumber   String
  emailId         String   @unique
  Sites           Site[]
  Task           Task[]
}

model Site {
  id              Int      @id @default(autoincrement())
  siteId          String    @unique
  customerId      Int
  siteName        String
  siteAddress     String
  contactName     String
  contactNumber   String
  emailId         String
  Customer        Customer  @relation(fields: [customerId], references: [id])
  Task            Task[]
}


model Task{
  id              Int     @id @default(autoincrement())
  serviceId      Int
  departmentId    Int
  customerId      Int
  siteId          Int
  workScope       String
  proposedDate      String
  priority           String
  remark             String
  status             String
  hodId              Int
  managerId          Int
  executiveId        Int

  Customer      Customer @relation(fields: [customerId], references: [id])
  Site     Site @relation(fields: [siteId], references: [id])
  Service      Service @relation(fields: [serviceId], references: [id])
  Department     Department @relation(fields: [departmentId], references: [id])
}
